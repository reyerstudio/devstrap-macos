---
# Tap commands
- name: Ensure configured taps are tapped
  homebrew_tap: "tap={{ item }} state=present"
  loop: "{{ homebrew_taps }}"

# Cask commands
- name: Ensure blacklisted cask applications are not installed
  homebrew_cask: "name={{ item }} state=absent"
  loop: "{{ homebrew_cask_uninstalled_apps }}"

- name: Install configured cask applications
  homebrew_cask:
    name: "{{ item.name | default(item) }}"
    state: present
    install_options: "{{ item.install_options | default('appdir=' + homebrew_cask_appdir) }}"
    accept_external_apps: "{{ homebrew_cask_accept_external_apps }}"
  loop: "{{ homebrew_cask_apps }}"
  notify:
    - Clear homebrew cache

# Brew commands
- name: Ensure blacklisted homebrew packages are not installed
  homebrew: "name={{ item }} state=absent"
  loop: "{{ homebrew_uninstalled_packages }}"

- name: Ensure configured homebrew packages are installed
  homebrew:
    name: "{{ item.name | default(item) }}"
    install_options: "{{ item.install_options | default(omit) }}"
    state: present
  loop: "{{ homebrew_installed_packages }}"

- name: Upgrade all homebrew packages (if configured)
  homebrew: update_homebrew=yes upgrade_all=yes
  when: homebrew_upgrade_all_packages

- name: Check for Brewfile
  stat:
    path: "{{ homebrew_brewfile_dir }}/Brewfile"
  register: homebrew_brewfile
  check_mode: no

- name: Install from Brewfile
  command: "brew bundle chdir={{ homebrew_brewfile_dir }}"
  when: homebrew_brewfile.stat.exists and homebrew_use_brewfile
